// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsiOffice.PacientAPI.Model.Context;

#nullable disable

namespace PsiOffice.PacientAPI.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20240401192353_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PsiOffice.PacientAPI.Model.Pacient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdditionalFilds")
                        .HasColumnType("json")
                        .HasColumnName("additional_fields");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("birth_date");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("longtext")
                        .HasColumnName("birth_place");

                    b.Property<string>("CEP")
                        .HasColumnType("longtext")
                        .HasColumnName("cep");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<string>("Cellphone")
                        .HasColumnType("longtext")
                        .HasColumnName("cellphone");

                    b.Property<string>("ClinicalHistory")
                        .HasColumnType("longtext")
                        .HasColumnName("clinical_history");

                    b.Property<string>("Complement")
                        .HasColumnType("longtext")
                        .HasColumnName("complement");

                    b.Property<DateTime>("DtCreation")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_creation");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Forwarding")
                        .HasColumnType("longtext")
                        .HasColumnName("forwarding");

                    b.Property<long>("IdCity")
                        .HasColumnType("bigint")
                        .HasColumnName("id_city");

                    b.Property<long>("IdCounty")
                        .HasColumnType("bigint")
                        .HasColumnName("id_country");

                    b.Property<long>("IdState")
                        .HasColumnType("bigint")
                        .HasColumnName("id_state");

                    b.Property<string>("Meds")
                        .HasColumnType("longtext")
                        .HasColumnName("meds");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasColumnType("longtext")
                        .HasColumnName("number");

                    b.Property<string>("Observation")
                        .HasColumnType("longtext")
                        .HasColumnName("observation");

                    b.Property<string>("Sex")
                        .HasColumnType("longtext")
                        .HasColumnName("sex");

                    b.Property<string>("Street")
                        .HasColumnType("longtext")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("pacient");
                });
#pragma warning restore 612, 618
        }
    }
}
